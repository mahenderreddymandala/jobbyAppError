import {AiFillStar} from 'react-icons/ai'

import {HiLocationMarker} from 'react-icons/hi'
import {BsFillBagFill} from 'react-icons/bs'
import Loader from 'react-loader-spinner'
import {Component} from 'react'

import Cookies from 'js-cookie'

import './index.css'

const ApiStatus = {
  success: 'SUCCESS',
  failure: 'FAILURE',
  loading: 'LOADING',
  initial: '',
}

class JobItemDetails extends Component {
  state = {
    status: ApiStatus.initial,
    jobsData: '',
    skills: [],
    lifeAtCompanies: '',
    similarJobs: [],
  }

  componentDidMount() {
    this.getjobDetails()
  }

  getjobDetails = async () => {
    this.setState({status: ApiStatus.loading})
    const {match} = this.props
    const {params} = match
    const {id} = params
    //  console.log(id)

    const url = `https://apis.ccbp.in/jobs/${id}`
    const jwtToken = Cookies.get('jwt_token')

    const options = {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${jwtToken}`,
      },
    }

    const response = await fetch(url, options)
    const data = await response.json()

    if (response.ok === true) {
      //  console.log(data)

      const updatedData = {
        companyLogoUrl: data.job_details.company_logo_url,
        companyWebsiteUrl: data.job_details.company_website_url,
        employmentType: data.job_details.employment_type,
        id: data.job_details.id,
        jobDescription: data.job_details.job_description,

        location: data.job_details.location,
        packagePerAnnum: data.job_details.package_per_annum,
        rating: data.job_details.rating,
      }
      // console.log(updatedData)
      const skill = data.job_details.skills.map(each => ({
        skillimageUrl: each.image_url,
        skillname: each.name,
      }))
      console.log(skill)

      const lifeAtCompany = {
        lifedescription: data.job_details.life_at_company.description,
        lifeimageUrl: data.job_details.life_at_company.image_url,
      }
      // console.log(lifeAtCompany)

      const similarJob = data.similar_jobs.map(each => ({
        ScompanyLogoUrl: each.company_logo_url,
        SemploymentType: each.employment_type,
        Sid: each.id,
        SjobDescription: each.job_description,
        Sloaction: each.location,
        Srating: each.rating,
        Stitle: each.title,
      }))
      this.setState({
        status: ApiStatus.success,
        similarJobs: similarJob,
        lifeAtCompanies: lifeAtCompany,
        jobsData: updatedData,
        skills: skill,
      })
    } else {
      this.setState({status: ApiStatus.failure})
    }
  }

  renderLoading = () => (
    <div className="loader-container">
      <Loader type="ThreeDots" color="#ffffff" height="50" width="50" />
    </div>
  )

  renderJobSuccess = () => {
    const {jobsData, skills, lifeAtCompanies, similarJobs} = this.state
    const {skillimageUrl, skillname} = skills
    console.log(skills)
    //  console.log(lifeAtCompanies)
    console.log(similarJobs)

    const {lifedescription, lifeimageUrl} = lifeAtCompanies
    const {
      ScompanyLogoUrl,
      SemploymentType,
      SjobDescription,
      Slocation,
      SpackagePerAnnum,
      Srating,
      Stitle,
    } = similarJobs

    const {
      companyLogoUrl,
      employmentType,
      jobDescription,
      location,
      packagePerAnnum,
      rating,
      title,
    } = jobsData

    return (
      <div className="jobs-container-sections">
        <div className="image">
          <img src={companyLogoUrl} alt={title} className="image-2" />

          <div className="para">
            <h1 className="title">{title}</h1>
            <div className="star">
              <AiFillStar className="stars" />
              <p className="rating">{rating}</p>
            </div>
          </div>
        </div>
        <div className="p-h">
          <div className="h-section">
            <HiLocationMarker className="stars" />
            <p className="location">{location}</p>
            <BsFillBagFill className="stars" />
            <p className="type">{employmentType}</p>
          </div>
          <div>
            <h1 className="package">{packagePerAnnum}</h1>
          </div>
        </div>
        <hr />
        <h1>Description</h1>
        <p className="job-des">{jobDescription}</p>
        <div className="skills-section">
          <h1 className="head-sub">Skills</h1>

          <img src={skillimageUrl} alt={skillname} className="skills-name" />

          <h1 className="name-skills">{skillname}</h1>
        </div>
        <div className="life">
          <h1 className="head-sub">Life at Company</h1>

          <p>{lifedescription}</p>
          <img src={lifeimageUrl} alt="url" className="url" />
        </div>
        <div className="similar-jobs">
          <div className="image">
            <img src={ScompanyLogoUrl} alt={Stitle} className="image-2" />

            <div className="para">
              <h1 className="title">{Stitle}</h1>
              <div className="star">
                <AiFillStar className="stars" />
                <p className="rating">{Srating}</p>
              </div>
            </div>
          </div>
          <div className="p-h">
            <div className="h-section">
              <HiLocationMarker className="stars" />
              <p className="location">{Slocation}</p>
              <BsFillBagFill className="stars" />
              <p className="type">{SemploymentType}</p>
            </div>
            <div>
              <h1 className="package">{SpackagePerAnnum}</h1>
            </div>
          </div>
          <hr />
          <h1>SDescription</h1>
          <p className="job-des">{SjobDescription}</p>
        </div>
      </div>
    )
  }

  renderJobFailure = () => (
    <ul>
      <img
        src="https://assets.ccbp.in/frontend/react-js/failure-img.png"
        alt="failure view"
        className="nojobs-image"
      />
      <h1 className="no-jobs">Oops! Something Went Wrong</h1>
      <p className="no">We cannot seem to find the page you are looking for.</p>
      <button className="btn-style" type="button" onClick={this.onRetry}>
        Retry
      </button>
    </ul>
  )

  renderJobItemDetails = () => {
    const {status} = this.state
    switch (status) {
      case ApiStatus.success:
        return this.renderJobSuccess()
      case ApiStatus.failure:
        return this.renderJobFailure()
      case ApiStatus.loading:
        return this.renderLoading()
      default:
        return null
    }
  }

  render() {
    return <div>{this.renderJobItemDetails()}</div>
  }
}

export default JobItemDetails
